{"name":"Runwhen","tagline":"Javascript code dependency checker.","body":"Run When JS\r\n===========\r\n\r\nJavascript code dependency checker. This function tries to check an array of javascript elements (variable, function, object) are\r\nall defined before running a call back function passed to it as the second parameter.\r\n\r\nThis function is useful to break out of the call back functions found in some loader scripts like jQuery.getScript() or $LAB.script().\r\nYou no longer have to nest different callback functions to those loaders when loading multiple script resource that are dependent of\r\neach other, enabling more parallel loading of scripts.\r\n\r\nYou only specify which js components you want to be defined before running your code. Helps for more code modularity.\r\n\r\nExample Usage:\r\n==============\r\n<pre>\r\n\t<code>\r\n\t$.getScript('js/jquery-ui.min.js');\r\n\t$.getScript('js/jquery.jxdomain.js');\r\n\t$.getScript('js/jquery.jrumble.1.3.min.js');\r\n\t$.getScript('js/Ttow.js');\r\n\t\r\n\trunwhen(['Ttow.Browser', 'jQuery.fn.datepicker', '$.jxdomain', 'jQuery.fn.jrumble'], function () {\r\n\t\tconsole.log(typeof Ttow.Browser + ' - Ttow.Browser');\r\n\t\tconsole.log(typeof jQuery.fn.datepicker + ' - jQuery.fn.datepicker');\r\n\t\tconsole.log(typeof $.jxdomain + ' - $.jxdomain');\r\n\t\tconsole.log(typeof jQuery.fn.jrumble + ' - jQuery.fn.jrumble');\t\r\n\t});\r\n\t</code>\r\n</pre>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}